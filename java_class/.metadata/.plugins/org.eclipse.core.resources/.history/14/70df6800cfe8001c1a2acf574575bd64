package com.view.systemAdm;

import java.awt.EventQueue;
import java.awt.Font;
import java.util.List;
import java.util.Vector;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

import com.bean.Building;
import com.bean.DormAdmin;
import com.dao.SysAdminDao;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class DormAdmManage extends JFrame {

	private JPanel contentPane;
	private JTextField ID;
	private JTextField name;
	private JTextField building;
	private JTable dormAdmTable;
	private DefaultTableModel dtm=null;
	@SuppressWarnings("unused")
	private AddDormAdm addDormAdm=null;
	@SuppressWarnings("rawtypes")
	private JComboBox sexTypeComb;
	private JButton changeButton;
	private JButton deleteButton;
	@SuppressWarnings("unused")
	private static DormAdmin selectDormAdm=new DormAdmin();
	private static final String[] sexType={"","ƒ–","≈Æ"};
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DormAdmManage frame = new DormAdmManage();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	@SuppressWarnings({ "serial", "unchecked" })
	public DormAdmManage() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 679, 494);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		setLocationRelativeTo(null);
		
		JLabel lblNewLabel = new JLabel("\u5BBF\u7BA1\u8D26\u53F7");
		lblNewLabel.setFont(new Font("Œ¢»Ì—≈∫⁄", Font.PLAIN, 18));
		lblNewLabel.setBounds(50, 21, 108, 29);
		contentPane.add(lblNewLabel);
		
		JLabel lblNewLabel_1 = new JLabel("\u5BBF\u7BA1\u540D\u5B57");
		lblNewLabel_1.setFont(new Font("Œ¢»Ì—≈∫⁄", Font.PLAIN, 18));
		lblNewLabel_1.setBounds(372, 21, 108, 29);
		contentPane.add(lblNewLabel_1);
		
		JLabel lblNewLabel_2 = new JLabel("\u7BA1\u7406\u5BBF\u820D\u697C");
		lblNewLabel_2.setFont(new Font("Œ¢»Ì—≈∫⁄", Font.PLAIN, 18));
		lblNewLabel_2.setBounds(35, 81, 108, 29);
		contentPane.add(lblNewLabel_2);
		
		JLabel lblNewLabel_3 = new JLabel("\u6027\u522B");
		lblNewLabel_3.setFont(new Font("Œ¢»Ì—≈∫⁄", Font.PLAIN, 18));
		lblNewLabel_3.setBounds(393, 81, 108, 29);
		contentPane.add(lblNewLabel_3);
		
		ID = new JTextField();
		ID.setFont(new Font("Œ¢»Ì—≈∫⁄", Font.PLAIN, 18));
		ID.setBounds(143, 18, 130, 30);
		contentPane.add(ID);
		ID.setColumns(10);
		
		name = new JTextField();
		name.setFont(new Font("Œ¢»Ì—≈∫⁄", Font.PLAIN, 18));
		name.setColumns(10);
		name.setBounds(464, 18, 130, 30);
		contentPane.add(name);
		
		building = new JTextField();
		building.setFont(new Font("Œ¢»Ì—≈∫⁄", Font.PLAIN, 18));
		building.setColumns(10);
		building.setBounds(143, 78, 130, 30);
		contentPane.add(building);
		
		sexTypeComb = new JComboBox();
		sexTypeComb.setFont(new Font("Œ¢»Ì—≈∫⁄", Font.PLAIN, 18));
		sexTypeComb.setBounds(464, 78, 130, 30);
		sexTypeComb.setModel(new DefaultComboBoxModel(sexType));
		contentPane.add(sexTypeComb);
		
		JButton queryButton = new JButton("\u67E5\u8BE2");
		queryButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				queryDormAdm(e);
			}
		});
		queryButton.setFont(new Font("Œ¢»Ì—≈∫⁄", Font.PLAIN, 18));
		queryButton.setFocusable(false);
		queryButton.setBounds(255, 135, 89, 32);
		contentPane.add(queryButton);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(21, 191, 611, 211);
		contentPane.add(scrollPane);
		
		dormAdmTable = new JTable();
		dormAdmTable.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				selectRow(e);
			}
		});
		//…Ë÷√”√ªß≤ªø…Õœ∂Ø
		dormAdmTable.getTableHeader().setReorderingAllowed(false);
		//…Ë÷√±Ì∏Ò∏ﬂ∂»
		dormAdmTable.setRowHeight(20);
		//…Ë÷√±Ì∏Òæ”÷–œ‘ æ
		DefaultTableCellRenderer r=new DefaultTableCellRenderer();
		r.setHorizontalAlignment(JLabel.CENTER);
		dormAdmTable.setDefaultRenderer(Object.class, r);
		
		dormAdmTable.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"\u5BBF\u7BA1\u8D26\u53F7", "\u5BBF\u7BA1\u540D\u5B57", "\u7BA1\u7406\u5BBF\u820D\u697C", "\u6027\u522B"
			}
		){
			public boolean isCellEditable(int row,int column){
				return false;
			}
		});
		
		dormAdmTable.setFont(new Font("SimSun", Font.PLAIN, 12));
		scrollPane.setViewportView(dormAdmTable);
		
		JButton insertButton = new JButton("\u589E\u52A0");
		insertButton.setFont(new Font("Œ¢»Ì—≈∫⁄", Font.PLAIN, 18));
		insertButton.setFocusable(false);
		insertButton.setBounds(350, 135, 89, 32);
		contentPane.add(insertButton);
		
		changeButton = new JButton("\u4FEE\u6539");
		changeButton.setFont(new Font("Œ¢»Ì—≈∫⁄", Font.PLAIN, 18));
		changeButton.setFocusable(false);
		changeButton.setBounds(445, 135, 89, 32);
		contentPane.add(changeButton);
		
		deleteButton = new JButton("\u5220\u9664");
		deleteButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				deleteDormAdm(e);
			}
		});
		deleteButton.setFont(new Font("Œ¢»Ì—≈∫⁄", Font.PLAIN, 18));
		deleteButton.setFocusable(false);
		deleteButton.setBounds(540, 135, 89, 32);
		contentPane.add(deleteButton);
		
		this.deleteButton.setFocusable(false);
		this.changeButton.setFocusable(false);
		queryButton.setFocusable(false);
		insertButton.setFocusable(false);
		
		dtm=(DefaultTableModel)dormAdmTable.getModel();
		queryAllDormAdm();
	}

	//…æ≥˝Àﬁπ‹
	protected void deleteDormAdm(ActionEvent e) {
		boolean confirmDelete=JOptionPane.showConfirmDialog(this, "»∑∂®“™…æ≥˝∏√Àﬁπ‹¬£ø","’˝‘⁄…æ≥˝°≠°≠",JOptionPane.YES_NO_OPTION)==JOptionPane.OK_OPTION;
		if(confirmDelete){
			SysAdminDao sysAdmDao=new SysAdminDao();
			boolean success=sysAdmDao.deleteBuilding(selectDormAdm.getDormAdmID());
			if(success){
				JOptionPane.showMessageDialog(this, "…æ≥˝≥…π¶£°");
				queryAllDormAdm();
			}else{
				JOptionPane.showMessageDialog(this, "…æ≥˝ ß∞‹");
			}
		}
	}

	// Û±Íµ„ª˜—°‘Ò“ª∏ˆÀﬁπ‹
	protected void selectRow(MouseEvent e) {
		selectDormAdm.setDormAdmID(dtm.getValueAt(this.dormAdmTable.getSelectedRow(), 0).toString());
		selectDormAdm.setName(dtm.getValueAt(this.dormAdmTable.getSelectedRow(), 1).toString());
		selectDormAdm.setBuildingName(dtm.getValueAt(this.dormAdmTable.getSelectedRow(), 2).toString());
		selectDormAdm.setSex(dtm.getValueAt(this.dormAdmTable.getSelectedRow(), 3).toString());
		this.changeButton.setEnabled(true);
		this.deleteButton.setEnabled(true);
	}

	public boolean isEmpty(String s){
		if("".equals(s)||s==null)
			return true;
		return false;
	}
	
	//≤È—ØÀﬁπ‹–≈œ¢
	@SuppressWarnings("unchecked")
	protected void queryDormAdm(ActionEvent e) {
		String dormAdmID=this.ID.getText();
		String dormAdmName=this.name.getText();
		String dormAdmBuildingID=this.building.getText();
		String sexType=(String)this.sexTypeComb.getSelectedItem();
		if(dormAdmID.isEmpty()&&dormAdmName.isEmpty()&&dormAdmBuildingID.isEmpty()&&sexType.isEmpty()){
			queryAllDormAdm();
			return;
		}
		DormAdmin queryDormAdm = new DormAdmin();
		queryDormAdm.setDormAdmID(dormAdmID);
		queryDormAdm.setName(dormAdmName);
		queryDormAdm.setBuildingName(dormAdmBuildingID);
		queryDormAdm.setSex(sexType);
		dtm.setRowCount(0);
		SysAdminDao sysAdmDao=new SysAdminDao();
		List<DormAdmin> DormAdmList=sysAdmDao.queryDormAdm(queryDormAdm);
		for(DormAdmin da:DormAdmList){
			@SuppressWarnings("rawtypes")
			Vector v=new Vector();
			v.add(da.getDormAdmID());
			v.add(da.getName());
			v.add(da.getBuildingName());
			v.add(da.getSex());
			dtm.addRow(v);
		}
	}

	//≤È—ØÀ˘”–Àﬁπ‹
	@SuppressWarnings({ "unchecked", "rawtypes" })
	private void queryAllDormAdm() {
		dtm.setRowCount(0);
		SysAdminDao sysAdmDao=new SysAdminDao();
		List<DormAdmin> DormAdmList=sysAdmDao.queryAllDormAdm();
		for(DormAdmin da:DormAdmList){
			@SuppressWarnings("rawtypes")
			Vector v=new Vector();
			v.add(da.getDormAdmID());
			v.add(da.getName());
			v.add(da.getBuildingName());
			v.add(da.getSex());
			dtm.addRow(v);
		}
		this.changeButton.setEnabled(false);
		this.deleteButton.setEnabled(false);
	}
}
